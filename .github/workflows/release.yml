name: Release
on:
  release:
    types: [published]
jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GIT_USER_NAME: 'grails-build'
      GIT_USER_EMAIL: 'grails-build@users.noreply.github.com'
    steps:
      - uses: actions/checkout@v4
      - uses: gradle/wrapper-validation-action@v2
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Set the current release version
        id: release_version
        run: echo "release_version=${GITHUB_REF:11}" >> $GITHUB_OUTPUT

      - name: Run pre-release
        uses: grails/github-actions/pre-release@main

      - name: Generate secring file
        env:
          SECRING_FILE: ${{ secrets.SECRING_FILE }}
        run: echo $SECRING_FILE | base64 -d > ${{ github.workspace }}/secring.gpg

      - name: Publish to Sonatype
        id: publish_to_sonatype
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_STAGING_PROFILE_ID: ${{ secrets.SONATYPE_STAGING_PROFILE_ID }}
          SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
          SIGNING_PASSPHRASE: ${{ secrets.SIGNING_PASSPHRASE }}
          GITHUB_MAVEN_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          arguments: |
            -Psigning.secretKeyRingFile=${{ github.workspace }}/secring.gpg
            publishToSonatype
            closeAndReleaseSonatypeStagingRepository

      - name: Generate Documentation
        if: success()
        uses: gradle/actions/setup-gradle@v3
        env:
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        with:
          arguments: docs

      - name: Publish Documentation to Github Pages
        if: success()
        uses: grails/github-pages-deploy-action@grails
        env:
          TARGET_REPOSITORY: ${{ github.repository }}
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
          BRANCH: gh-pages
          FOLDER: docs/build/docs
          VERSION: ${{ steps.release_version.outputs.release_version }}
          DOC_FOLDER: gh-pages
          COMMIT_EMAIL: 'grails-build@users.noreply.github.com'
          COMMIT_NAME: 'grails-build'

      - name: Run post-release
        if: steps.publish_to_sonatype.outcome == 'success'
        uses: grails/github-actions/post-release@main