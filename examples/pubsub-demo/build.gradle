plugins {
    id 'application'
    id 'groovy'
    id 'org.grails.grails-web'
    id 'org.grails.plugins.views-json'
}

group = 'pubsub.demo'
configurations.all {

    resolutionStrategy.dependencySubstitution {
        substitute module("org.codehaus.groovy:groovy") using module('org.apache.groovy:groovy:4.0.22')
        substitute module("org.codehaus.groovy:groovy-templates") using module('org.apache.groovy:groovy-templates:4.0.22')
        substitute module("org.codehaus.groovy:groovy-xml") using module('org.apache.groovy:groovy-xml:4.0.22')
        substitute module("org.codehaus.groovy:groovy-json") using module('org.apache.groovy:groovy-json:4.0.22')
    }
}
dependencies {

    implementation project(':grails-plugin-async')
    implementation project(':grails-plugin-events')

    implementation 'org.grails:grails-core'
    implementation 'org.grails:grails-logging'
    implementation 'org.grails:grails-plugin-databinding'
    implementation 'org.grails:grails-plugin-interceptors'
    implementation 'org.grails:grails-plugin-rest'
    implementation 'org.grails:grails-plugin-services'
    implementation 'org.grails:grails-plugin-url-mappings'
    implementation 'org.grails:grails-web-boot'

    implementation 'org.grails.plugins:hibernate5'
    implementation 'org.grails.plugins:views-json'

    implementation 'org.springframework.boot:spring-boot-autoconfigure'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter-tomcat'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.apache.tomcat:tomcat-jdbc'

    testImplementation 'io.micronaut:micronaut-http-client'
    testImplementation 'org.grails:grails-web-testing-support'

}

// Don't need groovydoc for example project
tasks.named('groovydoc') {
    enabled = false
}